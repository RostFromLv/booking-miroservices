version: '3.0'

services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
    ports:
      - '9411:9411'
    networks:
      - spring-network
#POSTGRES
  postgres:
    container_name: postgres-db
    restart: always
    image: postgres:13.6
    ports:
      - '5432:5432'
    networks:
      - spring-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
#GATEWAY
  gateway:
    container_name: gateway
    build:
      context: ../gateway-service
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      ZIPKIN_HOST: http://zipkin:9411
      ADDRESS_SERVICE_URI: http://address-service:8081
      USERS_SERVICE_URI: http://users-service:8082
      HOTELS_SERVICE_URI: http://hotels-service:8083
      ORDERS_SERVICE_URI: http://orders-service:8084
      PAYMENTS_SERVICE_URI: http://payments-service:8085
    networks:
      - spring-network
# HOTEL
  hotel-service:
    container_name: hotels-service
    build:
      context: ../hotels-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      ADDRESS_SERVICE_URI: http://address-service:8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotels
      ZIPKIN_HOST: http://zipkin:9411
    depends_on:
      - postgres
    networks:
      - spring-network
    links:
      - gateway
## USER
#  user-service:
#    container_name: users-service
#    build:
#      context: ../users-service
#      dockerfile: Dockerfile
#    ports:
#      - "8082:8082"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/users
#      ZIPKIN_HOST: http://zipkin:9411
#    depends_on:
#      - postgres
#    networks:
#      - spring-network
#    links:
#      - gateway
# ADDRESS
  address-service:
    container_name: address-service
    build:
      context: ../address-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/booking
      ZIPKIN_HOST: http://zipkin:9411
    depends_on:
      - postgres
    networks:
      - spring-network
    links:
      - zipkin
      - gateway
##ORDERS
#  orders-service:
#    container_name: orders-service
#    build:
#      context: ../orders-service
#      dockerfile: Dockerfile
#    ports:
#      - "8084:8084"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orders
#      ZIPKIN_HOST: http://zipkin:9411
#      USERS_SERVICE_URI: http://users-service:8082
#      HOTELS_SERVICE_URI: http://hotels-service:8083
#      PAYMENT_SERVICE_URI: http://payments-service:8085
#    depends_on:
#      - postgres
#      - gateway
#    networks:
#      - spring-network
#    links:
#      - gateway
##Payment
#  payments-service:
#    container_name: payments-service
#    build:
#      context: ../payment-service
#      dockerfile: Dockerfile
#    ports:
#      - "8085:8085"
#    environment:
#      ZIPKIN_HOST: http://zipkin:9411
#      REDIS_HOST: redis-service
#      REDIS_PORT: 6379
#    depends_on:
#      - redis-service
#    links:
#      - zipkin
#      - gateway
#    networks:
#      - spring-network

 #Redis
  redis-service:
    container_name: redis-service
    image: redis
    ports:
      - "6379:6379"
    networks:
      - spring-network

networks:
  spring-network:
    driver: bridge